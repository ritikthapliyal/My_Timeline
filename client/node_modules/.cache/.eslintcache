[{"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\index.js":"1","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\App.js":"2","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Redux\\Store.js":"3","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Redux\\uiSlice.js":"4","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Redux\\userSlice.js":"5","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Calendar.js":"6","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Deadline.js":"7","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\MyDiary\\MyDiary.js":"8","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\SetGoalsOverlay.js":"9","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Api\\Api.js":"10","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Login\\LoginOverlay.js":"11","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\SetGoals.js":"12","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Login\\Login.js":"13","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Header\\Header.js":"14","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\RightScreen\\RightScreen.js":"15","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\RightScreen\\Today.js":"16","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\RightScreen\\Achievements.js":"17"},{"size":316,"mtime":1676154792368,"results":"18","hashOfConfig":"19"},{"size":3130,"mtime":1678465019451,"results":"20","hashOfConfig":"19"},{"size":435,"mtime":1676171752044,"results":"21","hashOfConfig":"19"},{"size":4066,"mtime":1677248930766,"results":"22","hashOfConfig":"19"},{"size":6767,"mtime":1678440316246,"results":"23","hashOfConfig":"19"},{"size":7991,"mtime":1676557460504,"results":"24","hashOfConfig":"19"},{"size":12603,"mtime":1677249101840,"results":"25","hashOfConfig":"19"},{"size":181,"mtime":1676452958196,"results":"26","hashOfConfig":"19"},{"size":372,"mtime":1677615493473,"results":"27","hashOfConfig":"19"},{"size":635,"mtime":1678438190295,"results":"28","hashOfConfig":"19"},{"size":486,"mtime":1676166027538,"results":"29","hashOfConfig":"19"},{"size":5557,"mtime":1677217471665,"results":"30","hashOfConfig":"19"},{"size":5087,"mtime":1676332376627,"results":"31","hashOfConfig":"19"},{"size":2647,"mtime":1677090218818,"results":"32","hashOfConfig":"19"},{"size":321,"mtime":1678466267284,"results":"33","hashOfConfig":"19"},{"size":15505,"mtime":1678481684254,"results":"34","hashOfConfig":"19"},{"size":1812,"mtime":1678487651546,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1sivwgn",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\index.js",[],[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\App.js",["89","90","91"],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Redux\\Store.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Redux\\uiSlice.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Redux\\userSlice.js",["92"],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Calendar.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Deadline.js",["93","94"],[],"import React, { useRef,useEffect,useState, Fragment} from 'react'\r\nimport './Deadline.css'\r\nimport {setMouseOverDeadline} from '../Redux/uiSlice'\r\nimport {deleteGoal, editGoal} from '../Redux/userSlice'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport timer from '../Assets/timer.png'\r\n\r\n\r\n\r\nfunction getGoalsArray(userData,userLoggedIn,currMonth,currYear){\r\n    if(userLoggedIn && Object.keys(userData.goals[currMonth]).length !== 0 && userData.goals[currMonth][currYear]){\r\n        return Object.keys(userData.goals[currMonth][currYear])\r\n    }\r\n    else {\r\n        return []\r\n    }\r\n}\r\n\r\n\r\nfunction Deadline() {\r\n\r\n    const [confirmation,setConfirmation] = useState(0)\r\n    const [goalTitle,setGoalTitle] = useState(\"\")\r\n    const [goalMotivation,setGoalMotivation] = useState(\"\")\r\n    const [enableDelete,setEnableDelete] = useState(false)\r\n    const [enableEditing,setEnableEditing] = useState(false)\r\n    \r\n\r\n    const {userData,userLoggedIn} = useSelector((state)=> state.userSlice)\r\n    const {currMonth,currYear,mouseOverDeadline} = useSelector((state)=> state.uiSlice)\r\n    const goals = getGoalsArray(userData,userLoggedIn,currMonth,currYear)\r\n\r\n    const deadline = useRef()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDeleteGoal = (date)=>{\r\n        dispatch(deleteGoal({_id:userData._id,date,month:currMonth,year:currYear}))\r\n    }\r\n    const handleUpdateGoal = (date)=>{\r\n        dispatch(editGoal({_id:userData._id,date,month:currMonth,year:currYear,goalTitle,goalMotivation})).then(setConfirmation(0),setEnableEditing(false))\r\n    }\r\n\r\n    const handleMouseOver = ()=>{\r\n        deadline.current.classList.add(\"deadline-2\")\r\n        dispatch(setMouseOverDeadline(true))\r\n    }\r\n    const handleMouseLeave = ()=>{\r\n        \r\n        setEnableEditing(false)\r\n        setEnableDelete(false)\r\n        deadline.current.classList.remove(\"deadline-2\")\r\n        dispatch(setMouseOverDeadline(false))\r\n        \r\n    }\r\n    const handleShowToday = (e)=>{\r\n        // Checking if the click event originated from a button inside the div\r\n        // if (!e.target.closest('.goal-buttons') && !e.target.nodeName !== 'BUTTON' && !enableEditing) {\r\n        //     dispatch()\r\n        // }\r\n    }\r\n\r\n    const date = new Date()\r\n    date.setMonth(currMonth);\r\n    const monthSpell = date.toLocaleString('en-US', { month: 'long' });\r\n\r\n    const [time, setTime] = useState(new Date().getTime());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setTime(new Date().getTime());\r\n        }, 1000);\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n\r\n    const diffInDays = (date) => {\r\n        \r\n        const today = new Date();\r\n        \r\n        const futureDate = new Date(currYear, currMonth, date);\r\n\r\n        const differenceInTime = futureDate.getTime() - today.getTime();\r\n\r\n        if (differenceInTime < 86400000) {\r\n            const seconds = Math.floor(differenceInTime / 1000);\r\n            const minutes = Math.floor(seconds / 60);\r\n            const hours = Math.floor(minutes / 60);\r\n            const remainingMinutes = minutes % 60;\r\n            const remainingSeconds = seconds % 60;\r\n            return `${hours.toString().padStart(2, '0')}:${remainingMinutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n        } \r\n        else {\r\n            const days = Math.floor(differenceInTime / (1000 * 60 * 60 * 24));\r\n            return `${days} days remaining`;\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div    \r\n                ref={deadline} \r\n                onMouseOver={handleMouseOver} \r\n                onMouseLeave={handleMouseLeave} \r\n                className='deadline'>\r\n            \r\n            {   \r\n                userLoggedIn && \r\n                <Fragment>\r\n                    <h1 className='deadline-heading'>My Goals</h1>\r\n                    <div className='goals-container'>\r\n                        {\r\n                            goals.length > 0 && goals.map((date,index)=>{\r\n                                return <div key={date} className='goal' onClick={handleShowToday}>\r\n                                    <div>\r\n                                        <p className='goal-date'>\r\n                                            <span className='goal-index'>{index+1}.</span>\r\n                                            {`${date} - ${monthSpell} - ${currYear}`}\r\n                                        </p>\r\n                                        <div style={{display: 'block',\r\n                                                    border: '1px solid #567189',\r\n                                                    height: '4rem'}}></div>\r\n                                        {\r\n                                            enableEditing && confirmation === date ?\r\n                                            <input  type=\"text\" className='goal-title-input' \r\n                                                    onChange={(e)=>setGoalTitle(e.target.value)} \r\n                                                    value={goalTitle}\r\n                                                    placeholder=\"Enter Title\">\r\n                                            </input>\r\n                                            :\r\n                                            <p className='goal-title'>{userData.goals[currMonth][currYear][date].title}</p>\r\n                                        }\r\n                                    </div>\r\n                                    {   \r\n                                        enableEditing && confirmation === date ?\r\n                                        <textarea type=\"text\" className='goal-motivation-input' \r\n                                                onChange={(e)=>setGoalMotivation(e.target.value)} \r\n                                                value={goalMotivation}\r\n                                                placeholder=\"Enter Motivation\"\r\n                                                >\r\n                                        </textarea>\r\n                                        :\r\n                                        <p className='goal-motivation'>{userData.goals[currMonth][currYear][date].motivation}</p>\r\n                                    }\r\n                                    <div className='goal-btn-container'>\r\n                                        <div className='goal-buttons'>\r\n                                            <button onClick={()=>{  setEnableEditing(true);\r\n                                                                    setConfirmation(date)\r\n                                                                    setEnableDelete(false)\r\n                                                                    // if(!enableEditing){\r\n                                                                        setGoalTitle(userData.goals[currMonth][currYear][date].title)\r\n                                                                        setGoalMotivation(userData.goals[currMonth][currYear][date].motivation)\r\n                                                                    // }\r\n                                                                }} \r\n                                            style={{ display : mouseOverDeadline ? \"flex\" : \"none\"}}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M441 58.9L453.1 71c9.4 9.4 9.4 24.6 0 33.9L424 134.1 377.9 88 407 58.9c9.4-9.4 24.6-9.4 33.9 0zM209.8 256.2L344 121.9 390.1 168 255.8 302.2c-2.9 2.9-6.5 5-10.4 6.1l-58.5 16.7 16.7-58.5c1.1-3.9 3.2-7.5 6.1-10.4zM373.1 25L175.8 222.2c-8.7 8.7-15 19.4-18.3 31.1l-28.6 100c-2.4 8.4-.1 17.4 6.1 23.6s15.2 8.5 23.6 6.1l100-28.6c11.8-3.4 22.5-9.7 31.1-18.3L487 138.9c28.1-28.1 28.1-73.7 0-101.8L474.9 25C446.8-3.1 401.2-3.1 373.1 25zM88 64C39.4 64 0 103.4 0 152V424c0 48.6 39.4 88 88 88H360c48.6 0 88-39.4 88-88V312c0-13.3-10.7-24-24-24s-24 10.7-24 24V424c0 22.1-17.9 40-40 40H88c-22.1 0-40-17.9-40-40V152c0-22.1 17.9-40 40-40H200c13.3 0 24-10.7 24-24s-10.7-24-24-24H88z\"/></svg>\r\n                                            </button>\r\n                                            {\r\n                                                userData.goals[currMonth][currYear][date].type === \"C\" &&\r\n                                                <button onClick={()=>{\r\n                                                                        setConfirmation(date)\r\n                                                                        setEnableDelete(true)\r\n                                                                        setEnableEditing(false)\r\n                                                                    }}\r\n                                                        style={{ display : mouseOverDeadline ? \"flex\" : \"none\"}}>\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M170.5 51.6L151.5 80h145l-19-28.4c-1.5-2.2-4-3.6-6.7-3.6H177.1c-2.7 0-5.2 1.3-6.7 3.6zm147-26.6L354.2 80H368h48 8c13.3 0 24 10.7 24 24s-10.7 24-24 24h-8V432c0 44.2-35.8 80-80 80H112c-44.2 0-80-35.8-80-80V128H24c-13.3 0-24-10.7-24-24S10.7 80 24 80h8H80 93.8l36.7-55.1C140.9 9.4 158.4 0 177.1 0h93.7c18.7 0 36.2 9.4 46.6 24.9zM80 128V432c0 17.7 14.3 32 32 32H336c17.7 0 32-14.3 32-32V128H80zm80 64V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16z\"/></svg>\r\n                                                </button>\r\n                                            }\r\n\r\n                                            {\r\n                                                confirmation === date && enableDelete && <div className='confirmation'  onMouseLeave={()=>setConfirmation(0)}>\r\n                                                    <p>Are You Sure ?</p>\r\n                                                    <button onClick={()=>{handleDeleteGoal(date)}} style={{color: \"#c45151\"}}>Yes, I Give up !</button>\r\n                                                    <button onClick={()=>{setConfirmation(0)}} \r\n                                                            style={{color: \"#51C485\"}}>No, I will Try.</button>\r\n                                                    </div>\r\n                                            }\r\n\r\n                                            {\r\n                                                confirmation === date && enableEditing && <div className='confirmation'>\r\n                                                    <button onClick={()=>{handleUpdateGoal(date)}} style={{color: \"#51C485\"}}>Save Changes</button>\r\n                                                    <button onClick={()=>{setConfirmation(0);setEnableEditing(false)}} style={{color: \"grey\"}}>Cancel</button>\r\n                                                    </div>\r\n                                            }\r\n\r\n                                            <button style={{ display : mouseOverDeadline ? \"flex\" : \"none\"}}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M211.8 339.8C200.9 350.7 183.1 350.7 172.2 339.8L108.2 275.8C97.27 264.9 97.27 247.1 108.2 236.2C119.1 225.3 136.9 225.3 147.8 236.2L192 280.4L300.2 172.2C311.1 161.3 328.9 161.3 339.8 172.2C350.7 183.1 350.7 200.9 339.8 211.8L211.8 339.8zM0 96C0 60.65 28.65 32 64 32H384C419.3 32 448 60.65 448 96V416C448 451.3 419.3 480 384 480H64C28.65 480 0 451.3 0 416V96zM48 96V416C48 424.8 55.16 432 64 432H384C392.8 432 400 424.8 400 416V96C400 87.16 392.8 80 384 80H64C55.16 80 48 87.16 48 96z\"/></svg>\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className='time-left' style={{gap:\"0rem\"}}>\r\n                                            <img src={timer} width=\"40px\" height=\"40px\"></img>\r\n                                            <span style={{width:\"fit-content\"}}>{diffInDays(date)}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            }\r\n\r\n            {\r\n                !userLoggedIn && <p>Manual</p>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Deadline","C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\MyDiary\\MyDiary.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\SetGoalsOverlay.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Api\\Api.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Login\\LoginOverlay.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\SetGoals.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Login\\Login.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\Header\\Header.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\RightScreen\\RightScreen.js",[],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\RightScreen\\Today.js",["95","96","97"],[],"C:\\Users\\ritik\\OneDrive\\Desktop\\React\\nnnn\\My_Timeline\\client\\src\\Components\\RightScreen\\Achievements.js",[],[],{"ruleId":"98","severity":1,"message":"99","line":18,"column":57,"nodeType":"100","messageId":"101","endLine":18,"endColumn":74},{"ruleId":"98","severity":1,"message":"102","line":18,"column":76,"nodeType":"100","messageId":"101","endLine":18,"endColumn":97},{"ruleId":"103","severity":1,"message":"104","line":41,"column":10,"nodeType":"105","endLine":41,"endColumn":34,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":18,"column":17,"nodeType":"109","messageId":"110","endLine":18,"endColumn":28},{"ruleId":"98","severity":1,"message":"111","line":66,"column":12,"nodeType":"100","messageId":"101","endLine":66,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":189,"column":45,"nodeType":"114","endLine":189,"endColumn":89},{"ruleId":"98","severity":1,"message":"115","line":27,"column":12,"nodeType":"100","messageId":"101","endLine":27,"endColumn":28},{"ruleId":"116","severity":1,"message":"117","line":135,"column":60,"nodeType":"118","messageId":"119","endLine":135,"endColumn":62},{"ruleId":"116","severity":1,"message":"117","line":208,"column":64,"nodeType":"118","messageId":"119","endLine":208,"endColumn":66},"no-unused-vars","'mouseOverDeadline' is assigned a value but never used.","Identifier","unusedVar","'showTodayInMiddeSreen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData._id'. Either include it or remove the dependency array.","ArrayExpression",["120"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'time' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'showPendingTasks' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"121","fix":"122"},"Update the dependencies array to be: [userLoggedIn, dispatch, userData._id]",{"range":"123","text":"124"},[1233,1257],"[userLoggedIn, dispatch, userData._id]"]