{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritik\\\\OneDrive\\\\Desktop\\\\React\\\\my_timeline\\\\client\\\\src\\\\Components\\\\SetGoals.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport \"./SetGoals.css\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setGoal } from '../Redux/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SetGoals(_ref) {\n  _s();\n  let {\n    setDisplayOverlay,\n    position\n  } = _ref;\n  const {\n    currSelectedDate,\n    currMonth,\n    currYear\n  } = useSelector(state => state.uiSlice);\n  const date = new Date();\n  date.setMonth(currMonth);\n  const monthSpell = date.toLocaleString('en-US', {\n    month: 'short'\n  });\n  const dispatch = useDispatch();\n  const [goalString, setGoalString] = useState(\"\");\n  const {\n    userData\n  } = useSelector(state => state.userSlice);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const handleOptionChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  const addGoal = () => {\n    dispatch(setGoal({\n      _id: userData._id,\n      month: currMonth,\n      year: currYear,\n      date: currSelectedDate,\n      goal: goalString\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-wrapper\",\n      onClick: () => setDisplayOverlay(),\n      style: {\n        backdropFilter: \"contrast(0.6)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setgoals\",\n      style: {\n        top: position.top,\n        left: position.left\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setgoals-up\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Target Date :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${currSelectedDate}/${monthSpell}/${currYear}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setgoals-down\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"goalTitle\",\n          placeholder: \"Enter an Objective, for example, Complete the React Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter your motivation behind this Objective. For example, I want to learn React because i want to gaining new skills and improve chances of being hired.\",\n          onChange: e => {\n            setGoalString(e.target.value);\n          },\n          value: goalString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkboxes\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: \"C\",\n                checked: selectedOption === \"C\",\n                onChange: handleOptionChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), \"Casual Goal\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: \"I\",\n                checked: selectedOption === \"I\",\n                onChange: handleOptionChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), \"Important Goal\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addGoal,\n            children: \"Add Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setDisplayOverlay();\n        },\n        className: \"close-button\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          \"stroke-width\": \"1\",\n          stroke: \"currentColor\",\n          class: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            d: \"M6 18L18 6M6 6l12 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(SetGoals, \"dEvPnuVaXrwzasuDd9SPCXrR5Hg=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = SetGoals;\nexport default SetGoals;\nvar _c;\n$RefreshReg$(_c, \"SetGoals\");","map":{"version":3,"names":["React","Fragment","useState","useSelector","useDispatch","setGoal","SetGoals","setDisplayOverlay","position","currSelectedDate","currMonth","currYear","state","uiSlice","date","Date","setMonth","monthSpell","toLocaleString","month","dispatch","goalString","setGoalString","userData","userSlice","selectedOption","setSelectedOption","handleOptionChange","event","target","value","addGoal","_id","year","goal","backdropFilter","top","left","e"],"sources":["C:/Users/ritik/OneDrive/Desktop/React/my_timeline/client/src/Components/SetGoals.js"],"sourcesContent":["import React,{Fragment, useState} from 'react'\r\nimport \"./SetGoals.css\"\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {setGoal} from '../Redux/userSlice'\r\n\r\n\r\nfunction SetGoals({setDisplayOverlay,position}) {\r\n\r\n\r\n    const {currSelectedDate,currMonth,currYear} = useSelector((state) => state.uiSlice)\r\n    const date = new Date()\r\n    date.setMonth(currMonth);\r\n    const monthSpell = date.toLocaleString('en-US', { month: 'short' });\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [goalString,setGoalString] = useState(\"\") \r\n    const {userData}= useSelector((state)=>state.userSlice)\r\n\r\n   \r\n    const [selectedOption, setSelectedOption] = useState(\"\");\r\n      \r\n    const handleOptionChange = (event) => {\r\n        setSelectedOption(event.target.value);\r\n    };\r\n\r\n    const addGoal = ()=>{\r\n        dispatch(setGoal({\r\n                            _id : userData._id, \r\n                            month : currMonth, \r\n                            year : currYear, \r\n                            date : currSelectedDate, \r\n                            goal : goalString}\r\n                        ))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='overlay-wrapper' onClick={()=>setDisplayOverlay()} style={{backdropFilter:\"contrast(0.6)\"}}></div>\r\n            <div className='setgoals' style={{top:position.top,left:position.left}}>\r\n\r\n                    <div className='setgoals-up'>\r\n                        <h2>Target Date :</h2>\r\n                        <p>{`${currSelectedDate}/${monthSpell}/${currYear}`}</p>\r\n                    </div>\r\n                    \r\n                    <hr></hr>\r\n                    \r\n\r\n                    <div className='setgoals-down'>\r\n                        <input className='goalTitle' placeholder='Enter an Objective, for example, Complete the React Course'></input>\r\n                        <textarea placeholder='Enter your motivation behind this Objective. For example, I want to learn React because i want to gaining new skills and improve chances of being hired.'\r\n                                  onChange={(e)=>{setGoalString(e.target.value)}}\r\n                                  value={goalString}>\r\n                        </textarea>\r\n                        <div>\r\n                            <div className='checkboxes'>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        value=\"C\"\r\n                                        checked={selectedOption === \"C\"}\r\n                                        onChange={handleOptionChange}\r\n                                    />\r\n                                    Casual Goal\r\n                                </div>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        value=\"I\"\r\n                                        checked={selectedOption === \"I\"}\r\n                                        onChange={handleOptionChange}\r\n                                    />\r\n                                    Important Goal\r\n                                </div>\r\n                            </div>\r\n                            <button onClick={addGoal}>Add Goal</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button onClick={()=>{setDisplayOverlay()}} className='close-button'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                        </svg>\r\n                    </button>\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default SetGoals"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}