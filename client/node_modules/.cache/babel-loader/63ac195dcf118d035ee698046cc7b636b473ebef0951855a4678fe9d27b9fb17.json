{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritik\\\\OneDrive\\\\Desktop\\\\React\\\\my_timeline\\\\src\\\\Components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, Fragment } from 'react';\nimport './Calendar.css';\nimport SetGoalsOverlay from './SetGoalsOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getDatesArray(month, year, handleOnClick) {\n  //last date of current month\n  const d = new Date(year, month + 1, 0);\n  const lastDate = d.getDate();\n  const dates = [];\n  const firstDate = new Date(year, month, 1);\n  const first_Day = firstDate.getDay();\n  let counter = -1 * first_Day;\n  for (counter; counter < lastDate; counter++) {\n    if (counter < 0) {\n      dates.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"no-date\",\n        children: \"null\"\n      }, counter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this));\n    } else {\n      dates.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOnClick,\n        value: counter + 1,\n        className: \"no-click\",\n        children: counter + 1\n      }, counter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this));\n    }\n  }\n  console.log(firstDate.getFullYear());\n  return dates;\n}\nfunction Calendar() {\n  _s();\n  const handleOnClick = e => {\n    setDisplayOverlay(!displayOverlay);\n  };\n  const [counter, setCounter] = useState(0);\n  const [displayOverlay, setDisplayOverlay] = useState(false);\n  const dates = getDatesArray(month + counter, year, handleOnClick);\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const nextMonth = () => {\n    setCounter(counter + 1);\n  };\n  const prevMonth = () => {\n    setCounter(counter - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [displayOverlay && /*#__PURE__*/_jsxDEV(SetGoalsOverlay, {\n      setDisplayOverlay: setDisplayOverlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevMonth,\n        className: \"prev-month\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          \"stroke-width\": \"1\",\n          stroke: \"white\",\n          class: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            d: \"M15.75 19.5L8.25 12l7.5-7.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), days.map(day => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"days\",\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 32\n        }, this);\n      }), dates, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextMonth,\n        className: \"next-month\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          \"stroke-width\": \"1\",\n          stroke: \"white\",\n          class: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            d: \"M8.25 4.5l7.5 7.5-7.5 7.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"QUVSVjug2AcEfzi76Fk/dqhaiMU=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","Fragment","SetGoalsOverlay","getDatesArray","month","year","handleOnClick","d","Date","lastDate","getDate","dates","firstDate","first_Day","getDay","counter","push","console","log","getFullYear","Calendar","e","setDisplayOverlay","displayOverlay","setCounter","days","nextMonth","prevMonth","map","day"],"sources":["C:/Users/ritik/OneDrive/Desktop/React/my_timeline/src/Components/Calendar.js"],"sourcesContent":["import React, { useState, Fragment} from 'react'\r\nimport './Calendar.css'\r\nimport SetGoalsOverlay from './SetGoalsOverlay';\r\n\r\n\r\nfunction getDatesArray(month,year,handleOnClick){\r\n\r\n    //last date of current month\r\n    const d = new Date(year, month + 1, 0);\r\n    const lastDate = d.getDate();\r\n\r\n    const dates = []\r\n\r\n    const firstDate = new Date(year,month,1)\r\n    const first_Day = firstDate.getDay()\r\n\r\n    let counter = -1 * first_Day\r\n\r\n    for(counter;counter < lastDate;counter++){\r\n        if(counter < 0){\r\n            dates.push(<button key={counter} className='no-date'>null</button>)\r\n        }\r\n        else{\r\n            dates.push(<button onClick={handleOnClick} \r\n                               key={counter} \r\n                               value={counter+1}\r\n                               className='no-click'>{counter+1}</button>)\r\n        }\r\n    }\r\n\r\n\r\n    console.log(firstDate.getFullYear())\r\n\r\n    return dates\r\n\r\n}\r\n\r\n\r\nfunction Calendar() {\r\n\r\n    const handleOnClick = (e) => {\r\n        setDisplayOverlay(!displayOverlay)\r\n    }\r\n\r\n\r\n    const [counter,setCounter] = useState(0)\r\n    const [displayOverlay,setDisplayOverlay] = useState(false)\r\n    const dates = getDatesArray(month+counter,year,handleOnClick)\r\n    const days = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]\r\n\r\n\r\n    const nextMonth = () => {\r\n        setCounter(counter+1)\r\n    }\r\n    const prevMonth = () => {\r\n        setCounter(counter-1)\r\n    }\r\n \r\n    \r\n    return (\r\n        <Fragment>\r\n\r\n            {\r\n                displayOverlay && <SetGoalsOverlay setDisplayOverlay={setDisplayOverlay}/>\r\n            }\r\n\r\n\r\n            <div className='Calendar-container'>\r\n                <button onClick={prevMonth} className='prev-month'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"white\" class=\"w-6 h-6\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\r\n                    </svg>\r\n                </button>\r\n                {\r\n                    days.map((day)=>{\r\n                        return <h4 key={day} className=\"days\">{day}</h4>\r\n                    })\r\n                }\r\n                {  \r\n                    dates\r\n                }\r\n                <button onClick={nextMonth} className='next-month'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"white\" class=\"w-6 h-6\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\r\n                        </svg>\r\n                </button>\r\n            </div>                \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Calendar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}