{"ast":null,"code":"'use strict';\n\nmodule.exports = (() => {\n  function convertAsterisk(expression, replecement) {\n    if (expression.indexOf('*') !== -1) {\n      return expression.replace('*', replecement);\n    }\n    return expression;\n  }\n  function convertAsterisksToRanges(expressions) {\n    expressions[0] = convertAsterisk(expressions[0], '0-59');\n    expressions[1] = convertAsterisk(expressions[1], '0-59');\n    expressions[2] = convertAsterisk(expressions[2], '0-23');\n    expressions[3] = convertAsterisk(expressions[3], '1-31');\n    expressions[4] = convertAsterisk(expressions[4], '1-12');\n    expressions[5] = convertAsterisk(expressions[5], '0-6');\n    return expressions;\n  }\n  return convertAsterisksToRanges;\n})();","map":{"version":3,"names":["module","exports","convertAsterisk","expression","replecement","indexOf","replace","convertAsterisksToRanges","expressions"],"sources":["C:/Users/ritik/OneDrive/Desktop/React/nnnn/My_Timeline/client/node_modules/node-cron/src/convert-expression/asterisk-to-range-conversion.js"],"sourcesContent":["'use strict';\nmodule.exports = (() => {\n    function convertAsterisk(expression, replecement){\n        if(expression.indexOf('*') !== -1){\n            return expression.replace('*', replecement);\n        }\n        return expression;\n    }\n\n    function convertAsterisksToRanges(expressions){\n        expressions[0] = convertAsterisk(expressions[0], '0-59');\n        expressions[1] = convertAsterisk(expressions[1], '0-59');\n        expressions[2] = convertAsterisk(expressions[2], '0-23');\n        expressions[3] = convertAsterisk(expressions[3], '1-31');\n        expressions[4] = convertAsterisk(expressions[4], '1-12');\n        expressions[5] = convertAsterisk(expressions[5], '0-6');\n        return expressions;\n    }\n\n    return convertAsterisksToRanges;\n})();\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,OAAO,GAAG,CAAC,MAAM;EACpB,SAASC,eAAe,CAACC,UAAU,EAAEC,WAAW,EAAC;IAC7C,IAAGD,UAAU,CAACE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAC;MAC9B,OAAOF,UAAU,CAACG,OAAO,CAAC,GAAG,EAAEF,WAAW,CAAC;IAC/C;IACA,OAAOD,UAAU;EACrB;EAEA,SAASI,wBAAwB,CAACC,WAAW,EAAC;IAC1CA,WAAW,CAAC,CAAC,CAAC,GAAGN,eAAe,CAACM,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;IACxDA,WAAW,CAAC,CAAC,CAAC,GAAGN,eAAe,CAACM,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;IACxDA,WAAW,CAAC,CAAC,CAAC,GAAGN,eAAe,CAACM,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;IACxDA,WAAW,CAAC,CAAC,CAAC,GAAGN,eAAe,CAACM,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;IACxDA,WAAW,CAAC,CAAC,CAAC,GAAGN,eAAe,CAACM,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;IACxDA,WAAW,CAAC,CAAC,CAAC,GAAGN,eAAe,CAACM,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;IACvD,OAAOA,WAAW;EACtB;EAEA,OAAOD,wBAAwB;AACnC,CAAC,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}