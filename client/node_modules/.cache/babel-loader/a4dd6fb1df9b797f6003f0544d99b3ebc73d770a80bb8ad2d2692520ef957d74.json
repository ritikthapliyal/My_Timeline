{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\nconst TimeMatcher = require('./time-matcher');\nclass Scheduler extends EventEmitter {\n  constructor(pattern, timezone, autorecover) {\n    super();\n    this.timeMatcher = new TimeMatcher(pattern, timezone);\n    this.autorecover = autorecover;\n  }\n  start() {\n    // clear timeout if exists\n    this.stop();\n    let lastCheck = process.hrtime();\n    let lastExecution = this.timeMatcher.apply(new Date());\n    const matchTime = () => {\n      const delay = 1000;\n      const elapsedTime = process.hrtime(lastCheck);\n      const elapsedMs = (elapsedTime[0] * 1e9 + elapsedTime[1]) / 1e6;\n      const missedExecutions = Math.floor(elapsedMs / 1000);\n      for (let i = missedExecutions; i >= 0; i--) {\n        const date = new Date(new Date().getTime() - i * 1000);\n        let date_tmp = this.timeMatcher.apply(date);\n        if (lastExecution.getTime() < date_tmp.getTime() && (i === 0 || this.autorecover) && this.timeMatcher.match(date)) {\n          this.emit('scheduled-time-matched', date_tmp);\n          date_tmp.setMilliseconds(0);\n          lastExecution = date_tmp;\n        }\n      }\n      lastCheck = process.hrtime();\n      this.timeout = setTimeout(matchTime, delay);\n    };\n    matchTime();\n  }\n  stop() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.timeout = null;\n  }\n}\nmodule.exports = Scheduler;","map":{"version":3,"names":["EventEmitter","require","TimeMatcher","Scheduler","constructor","pattern","timezone","autorecover","timeMatcher","start","stop","lastCheck","process","hrtime","lastExecution","apply","Date","matchTime","delay","elapsedTime","elapsedMs","missedExecutions","Math","floor","i","date","getTime","date_tmp","match","emit","setMilliseconds","timeout","setTimeout","clearTimeout","module","exports"],"sources":["C:/Users/ritik/OneDrive/Desktop/React/nnnn/My_Timeline/client/node_modules/node-cron/src/scheduler.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst TimeMatcher = require('./time-matcher');\n\nclass Scheduler extends EventEmitter{\n    constructor(pattern, timezone, autorecover){\n        super();\n        this.timeMatcher = new TimeMatcher(pattern, timezone);\n        this.autorecover = autorecover;\n    }\n\n    start(){\n        // clear timeout if exists\n        this.stop();\n\n        let lastCheck = process.hrtime();\n        let lastExecution = this.timeMatcher.apply(new Date());\n\n        const matchTime = () => {\n            const delay = 1000;\n            const elapsedTime = process.hrtime(lastCheck);\n            const elapsedMs = (elapsedTime[0] * 1e9 + elapsedTime[1]) / 1e6;\n            const missedExecutions = Math.floor(elapsedMs / 1000);\n            \n            for(let i = missedExecutions; i >= 0; i--){\n                const date = new Date(new Date().getTime() - i * 1000);\n                let date_tmp = this.timeMatcher.apply(date);\n                if(lastExecution.getTime() < date_tmp.getTime() && (i === 0 || this.autorecover) && this.timeMatcher.match(date)){\n                    this.emit('scheduled-time-matched', date_tmp);\n                    date_tmp.setMilliseconds(0);\n                    lastExecution = date_tmp;\n                }\n            }\n            lastCheck = process.hrtime();\n            this.timeout = setTimeout(matchTime, delay);\n        };\n        matchTime();\n    }\n\n    stop(){\n        if(this.timeout){\n            clearTimeout(this.timeout);\n        }\n        this.timeout = null;\n    }\n}\n\nmodule.exports = Scheduler;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtC,MAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE7C,MAAME,SAAS,SAASH,YAAY;EAChCI,WAAW,CAACC,OAAO,EAAEC,QAAQ,EAAEC,WAAW,EAAC;IACvC,KAAK,EAAE;IACP,IAAI,CAACC,WAAW,GAAG,IAAIN,WAAW,CAACG,OAAO,EAAEC,QAAQ,CAAC;IACrD,IAAI,CAACC,WAAW,GAAGA,WAAW;EAClC;EAEAE,KAAK,GAAE;IACH;IACA,IAAI,CAACC,IAAI,EAAE;IAEX,IAAIC,SAAS,GAAGC,OAAO,CAACC,MAAM,EAAE;IAChC,IAAIC,aAAa,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC,IAAIC,IAAI,EAAE,CAAC;IAEtD,MAAMC,SAAS,GAAG,MAAM;MACpB,MAAMC,KAAK,GAAG,IAAI;MAClB,MAAMC,WAAW,GAAGP,OAAO,CAACC,MAAM,CAACF,SAAS,CAAC;MAC7C,MAAMS,SAAS,GAAG,CAACD,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,WAAW,CAAC,CAAC,CAAC,IAAI,GAAG;MAC/D,MAAME,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACH,SAAS,GAAG,IAAI,CAAC;MAErD,KAAI,IAAII,CAAC,GAAGH,gBAAgB,EAAEG,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAC;QACtC,MAAMC,IAAI,GAAG,IAAIT,IAAI,CAAC,IAAIA,IAAI,EAAE,CAACU,OAAO,EAAE,GAAGF,CAAC,GAAG,IAAI,CAAC;QACtD,IAAIG,QAAQ,GAAG,IAAI,CAACnB,WAAW,CAACO,KAAK,CAACU,IAAI,CAAC;QAC3C,IAAGX,aAAa,CAACY,OAAO,EAAE,GAAGC,QAAQ,CAACD,OAAO,EAAE,KAAKF,CAAC,KAAK,CAAC,IAAI,IAAI,CAACjB,WAAW,CAAC,IAAI,IAAI,CAACC,WAAW,CAACoB,KAAK,CAACH,IAAI,CAAC,EAAC;UAC7G,IAAI,CAACI,IAAI,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;UAC7CA,QAAQ,CAACG,eAAe,CAAC,CAAC,CAAC;UAC3BhB,aAAa,GAAGa,QAAQ;QAC5B;MACJ;MACAhB,SAAS,GAAGC,OAAO,CAACC,MAAM,EAAE;MAC5B,IAAI,CAACkB,OAAO,GAAGC,UAAU,CAACf,SAAS,EAAEC,KAAK,CAAC;IAC/C,CAAC;IACDD,SAAS,EAAE;EACf;EAEAP,IAAI,GAAE;IACF,IAAG,IAAI,CAACqB,OAAO,EAAC;MACZE,YAAY,CAAC,IAAI,CAACF,OAAO,CAAC;IAC9B;IACA,IAAI,CAACA,OAAO,GAAG,IAAI;EACvB;AACJ;AAEAG,MAAM,CAACC,OAAO,GAAGhC,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}