{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst date = new Date();\nconst today = date.getDate();\nconst month = date.getMonth();\nconst year = date.getFullYear();\nfunction getDatesArray(month, year) {\n  //last date of current month\n  const d = new Date(year, month + 1, 0);\n  const lastDate = d.getDate();\n  const dates = [];\n  const firstDate = new Date(year, month, 1);\n  const first_Day = firstDate.getDay();\n  let counter = -1 * first_Day;\n  for (counter; counter < lastDate; counter++) {\n    if (counter < 0) {\n      dates.push(0);\n    } else {\n      dates.push(counter + 1);\n    }\n  }\n  return dates;\n}\nconst initialState = {\n  today: {\n    today,\n    month,\n    year\n  },\n  dates: getDatesArray(month, year),\n  currMonth: month,\n  currYear: year,\n  currSelectedDate: 0,\n  mouseOverDeadline: false,\n  showMainPage: true,\n  showMyDiary: false,\n  showAccomplishments: false,\n  showMoveLeft: true,\n  showMoveRight: true,\n  translateXValue: \"translateX(-35%)\"\n};\nexport const uiSlice = createSlice({\n  name: 'uiSlice',\n  initialState,\n  reducers: {\n    changeDatesArray(state) {\n      state.dates = getDatesArray(state.today.month, state.today.year);\n      state.currMonth = state.today.month;\n      state.currYear = state.today.year;\n    },\n    incrementYearAndMonth(state) {\n      state.currSelectedDate = 0;\n      state.currMonth += 1;\n      state.dates = getDatesArray(state.currMonth, state.currYear);\n      if (state.currMonth > 11) {\n        state.currMonth = 0;\n        state.currYear += 1;\n      }\n    },\n    decrementYearAndMonth(state) {\n      state.currMonth -= 1;\n      state.dates = getDatesArray(state.currMonth, state.currYear);\n      if (state.currMonth < 0) {\n        state.currMonth = 11;\n        state.currYear -= 1;\n      }\n    },\n    setCurrentSelectedDate(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.currSelectedDate = Number(payload);\n    },\n    setMouseOverDeadline(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      state.mouseOverDeadline = payload;\n    },\n    changePage(state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      if (payload === \"L\") {\n        if (state.showAccomplishments) {\n          state.translateXValue = \"translateX(-35%)\";\n        } else if (state.showMainPage) {\n          state.translateXValue = \"translateX(-14%)\";\n          state.showMainPage = false;\n          state.showMyDiary = true;\n        }\n      }\n      if (state.showMyDiary) {\n        state.showMoveLeft = false;\n      }\n      if (state.showAccomplishments) {\n        state.showMoveRight = false;\n      }\n    }\n  }\n});\nexport const {\n  incrementYearAndMonth,\n  changePage,\n  changeDatesArray,\n  decrementYearAndMonth,\n  setCurrentSelectedDate,\n  setMouseOverDeadline\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","date","Date","today","getDate","month","getMonth","year","getFullYear","getDatesArray","d","lastDate","dates","firstDate","first_Day","getDay","counter","push","initialState","currMonth","currYear","currSelectedDate","mouseOverDeadline","showMainPage","showMyDiary","showAccomplishments","showMoveLeft","showMoveRight","translateXValue","uiSlice","name","reducers","changeDatesArray","state","incrementYearAndMonth","decrementYearAndMonth","setCurrentSelectedDate","payload","Number","setMouseOverDeadline","changePage","actions","reducer"],"sources":["C:/Users/ritik/OneDrive/Desktop/React/my_timeline/client/src/Redux/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\n\r\nconst date = new Date()\r\nconst today = date.getDate()\r\nconst month = date.getMonth()\r\nconst year = date.getFullYear()\r\n\r\n\r\n\r\nfunction getDatesArray(month,year){\r\n\r\n    //last date of current month\r\n    const d = new Date(year, month + 1, 0);\r\n    const lastDate = d.getDate();\r\n\r\n    const dates = []\r\n\r\n    const firstDate = new Date(year,month,1)\r\n    const first_Day = firstDate.getDay()\r\n\r\n    let counter = -1 * first_Day\r\n\r\n    for(counter;counter < lastDate;counter++){\r\n        if(counter < 0){\r\n            dates.push(0)\r\n        }\r\n        else{\r\n            dates.push(counter+1)\r\n        }\r\n    }\r\n\r\n    return dates\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    today : {\r\n        today,\r\n        month,\r\n        year\r\n    },\r\n    dates : getDatesArray(month,year),\r\n    currMonth: month,\r\n    currYear: year,\r\n\r\n    currSelectedDate : 0,\r\n\r\n    mouseOverDeadline:false,\r\n\r\n    showMainPage: true,\r\n    showMyDiary : false,\r\n    showAccomplishments:false,\r\n\r\n    showMoveLeft: true,\r\n    showMoveRight: true,\r\n\r\n    translateXValue : \"translateX(-35%)\",\r\n}\r\n\r\n\r\n\r\nexport const uiSlice = createSlice({\r\n  name: 'uiSlice',\r\n  initialState,\r\n  reducers: {\r\n\r\n        changeDatesArray(state){\r\n            state.dates = getDatesArray(state.today.month,state.today.year)\r\n            state.currMonth = state.today.month \r\n            state.currYear = state.today.year \r\n        },\r\n\r\n        incrementYearAndMonth(state){\r\n\r\n            state.currSelectedDate = 0\r\n            state.currMonth += 1\r\n            \r\n            state.dates = getDatesArray(state.currMonth,state.currYear)\r\n            \r\n            if(state.currMonth > 11){\r\n                state.currMonth = 0\r\n                state.currYear += 1 \r\n            }\r\n\r\n        },\r\n        decrementYearAndMonth(state){\r\n            \r\n            state.currMonth -= 1\r\n        \r\n            state.dates = getDatesArray(state.currMonth,state.currYear)\r\n            \r\n            if(state.currMonth < 0){\r\n                state.currMonth = 11\r\n                state.currYear -= 1 \r\n            }\r\n\r\n        },\r\n        setCurrentSelectedDate(state,{payload}){\r\n            state.currSelectedDate = Number(payload)\r\n        },\r\n\r\n        setMouseOverDeadline(state,{payload}){\r\n            state.mouseOverDeadline = payload\r\n        },\r\n\r\n        changePage(state,{payload}){\r\n\r\n\r\n            if(payload === \"L\"){\r\n\r\n                if(state.showAccomplishments){\r\n                    state.translateXValue = \"translateX(-35%)\"\r\n                }\r\n                else if(state.showMainPage){\r\n                    state.translateXValue = \"translateX(-14%)\"\r\n                    state.showMainPage = false\r\n                    state.showMyDiary = true\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            if(state.showMyDiary){\r\n                state.showMoveLeft = false\r\n            }\r\n\r\n            if(state.showAccomplishments){\r\n                state.showMoveRight = false\r\n            }\r\n\r\n\r\n\r\n        }\r\n        \r\n  },\r\n})\r\n\r\n\r\nexport const { incrementYearAndMonth,changePage, changeDatesArray, decrementYearAndMonth,setCurrentSelectedDate,setMouseOverDeadline } = uiSlice.actions\r\n\r\nexport default uiSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}