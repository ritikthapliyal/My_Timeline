{"ast":null,"code":"'use strict';\n\nconst ScheduledTask = require('./scheduled-task');\nconst BackgroundScheduledTask = require('./background-scheduled-task');\nconst validation = require('./pattern-validation');\nconst storage = require('./storage');\n\n/**\n * @typedef {Object} CronScheduleOptions\n * @prop {boolean} [scheduled] if a scheduled task is ready and running to be\n *  performed when the time matches the cron expression.\n * @prop {string} [timezone] the timezone to execute the task in.\n */\n\n/**\n * Creates a new task to execute the given function when the cron\n *  expression ticks.\n *\n * @param {string} expression The cron expression.\n * @param {Function} func The task to be executed.\n * @param {CronScheduleOptions} [options] A set of options for the scheduled task.\n * @returns {ScheduledTask} The scheduled task.\n */\nfunction schedule(expression, func, options) {\n  const task = createTask(expression, func, options);\n  storage.save(task);\n  return task;\n}\nfunction createTask(expression, func, options) {\n  if (typeof func === 'string') return new BackgroundScheduledTask(expression, func, options);\n  return new ScheduledTask(expression, func, options);\n}\n\n/**\n * Check if a cron expression is valid.\n *\n * @param {string} expression The cron expression.\n * @returns {boolean} Whether the expression is valid or not.\n */\nfunction validate(expression) {\n  try {\n    validation(expression);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\n/**\n * Gets the scheduled tasks.\n *\n * @returns {ScheduledTask[]} The scheduled tasks.\n */\nfunction getTasks() {\n  return storage.getTasks();\n}\nmodule.exports = {\n  schedule,\n  validate,\n  getTasks\n};","map":{"version":3,"names":["ScheduledTask","require","BackgroundScheduledTask","validation","storage","schedule","expression","func","options","task","createTask","save","validate","_","getTasks","module","exports"],"sources":["C:/Users/ritik/OneDrive/Desktop/React/nnnn/My_Timeline/client/node_modules/node-cron/src/node-cron.js"],"sourcesContent":["'use strict';\n\nconst ScheduledTask = require('./scheduled-task');\nconst BackgroundScheduledTask = require('./background-scheduled-task');\nconst validation = require('./pattern-validation');\nconst storage = require('./storage');\n\n/**\n * @typedef {Object} CronScheduleOptions\n * @prop {boolean} [scheduled] if a scheduled task is ready and running to be\n *  performed when the time matches the cron expression.\n * @prop {string} [timezone] the timezone to execute the task in.\n */\n\n/**\n * Creates a new task to execute the given function when the cron\n *  expression ticks.\n *\n * @param {string} expression The cron expression.\n * @param {Function} func The task to be executed.\n * @param {CronScheduleOptions} [options] A set of options for the scheduled task.\n * @returns {ScheduledTask} The scheduled task.\n */\nfunction schedule(expression, func, options) {\n    const task = createTask(expression, func, options);\n\n    storage.save(task);\n\n    return task;\n}\n\nfunction createTask(expression, func, options) {\n    if (typeof func === 'string')\n        return new BackgroundScheduledTask(expression, func, options);\n\n    return new ScheduledTask(expression, func, options);\n}\n\n/**\n * Check if a cron expression is valid.\n *\n * @param {string} expression The cron expression.\n * @returns {boolean} Whether the expression is valid or not.\n */\nfunction validate(expression) {\n    try {\n        validation(expression);\n\n        return true;\n    } catch (_) {\n        return false;\n    }\n}\n\n/**\n * Gets the scheduled tasks.\n *\n * @returns {ScheduledTask[]} The scheduled tasks.\n */\nfunction getTasks() {\n    return storage.getTasks();\n}\n\nmodule.exports = { schedule, validate, getTasks };\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACjD,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,6BAA6B,CAAC;AACtE,MAAME,UAAU,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAClD,MAAMG,OAAO,GAAGH,OAAO,CAAC,WAAW,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,QAAQ,CAACC,UAAU,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACzC,MAAMC,IAAI,GAAGC,UAAU,CAACJ,UAAU,EAAEC,IAAI,EAAEC,OAAO,CAAC;EAElDJ,OAAO,CAACO,IAAI,CAACF,IAAI,CAAC;EAElB,OAAOA,IAAI;AACf;AAEA,SAASC,UAAU,CAACJ,UAAU,EAAEC,IAAI,EAAEC,OAAO,EAAE;EAC3C,IAAI,OAAOD,IAAI,KAAK,QAAQ,EACxB,OAAO,IAAIL,uBAAuB,CAACI,UAAU,EAAEC,IAAI,EAAEC,OAAO,CAAC;EAEjE,OAAO,IAAIR,aAAa,CAACM,UAAU,EAAEC,IAAI,EAAEC,OAAO,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,QAAQ,CAACN,UAAU,EAAE;EAC1B,IAAI;IACAH,UAAU,CAACG,UAAU,CAAC;IAEtB,OAAO,IAAI;EACf,CAAC,CAAC,OAAOO,CAAC,EAAE;IACR,OAAO,KAAK;EAChB;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQ,GAAG;EAChB,OAAOV,OAAO,CAACU,QAAQ,EAAE;AAC7B;AAEAC,MAAM,CAACC,OAAO,GAAG;EAAEX,QAAQ;EAAEO,QAAQ;EAAEE;AAAS,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}