{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritik\\\\OneDrive\\\\Desktop\\\\React\\\\my_timeline\\\\client\\\\src\\\\Components\\\\SetGoals.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport \"./SetGoals.css\";\nimport { useSelector } from 'react-redux';\nimport { updateGoal } from '../../Redux/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SetGoals(_ref) {\n  _s();\n  let {\n    setDisplayOverlay\n  } = _ref;\n  const {\n    currSelectedDate,\n    currMonth,\n    currYear\n  } = useSelector(state => state.uiSlice);\n  const date = new Date();\n  date.setMonth(currMonth);\n  const monthSpell = date.toLocaleString('en-US', {\n    month: 'short'\n  });\n  const [goalString, setGoalString] = useState(\"\");\n  const addGoal = () => {};\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-wrapper\",\n      onClick: () => setDisplayOverlay()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setgoals\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setgoals-up\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Target Date :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${currSelectedDate}/${monthSpell}/${currYear}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setgoals-down\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Kindly put your objectives in writing....\",\n          onChange: e => {\n            setGoalString(e.target.value);\n          },\n          value: goalString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addGoal,\n          children: \"Add Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDisplayOverlay(),\n        className: \"close-button\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          \"stroke-width\": \"1\",\n          stroke: \"currentColor\",\n          class: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\",\n            d: \"M6 18L18 6M6 6l12 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(SetGoals, \"ocoTwi8oFBbVgCIsnzw4XIHyIho=\", false, function () {\n  return [useSelector];\n});\n_c = SetGoals;\nexport default SetGoals;\nvar _c;\n$RefreshReg$(_c, \"SetGoals\");","map":{"version":3,"names":["React","Fragment","useState","useSelector","updateGoal","SetGoals","setDisplayOverlay","currSelectedDate","currMonth","currYear","state","uiSlice","date","Date","setMonth","monthSpell","toLocaleString","month","goalString","setGoalString","addGoal","e","target","value"],"sources":["C:/Users/ritik/OneDrive/Desktop/React/my_timeline/client/src/Components/SetGoals.js"],"sourcesContent":["import React,{Fragment, useState} from 'react'\r\nimport \"./SetGoals.css\"\r\nimport { useSelector } from 'react-redux'\r\nimport {updateGoal} from '../../Redux/userSlice'\r\n\r\n\r\nfunction SetGoals({setDisplayOverlay}) {\r\n\r\n    const {currSelectedDate,currMonth,currYear} = useSelector((state) => state.uiSlice)\r\n    const date = new Date()\r\n    date.setMonth(currMonth);\r\n    const monthSpell = date.toLocaleString('en-US', { month: 'short' });\r\n\r\n\r\n    const [goalString,setGoalString] = useState(\"\") \r\n\r\n    const addGoal = ()=>{\r\n        \r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='overlay-wrapper' onClick={()=>setDisplayOverlay()}></div>\r\n            <div className='setgoals'>\r\n\r\n                    <div className='setgoals-up'>\r\n                        <h2>Target Date :</h2>\r\n                        <p>{`${currSelectedDate}/${monthSpell}/${currYear}`}</p>\r\n                    </div>\r\n                    \r\n                    <hr></hr>\r\n\r\n                    <div className='setgoals-down'>\r\n                        <textarea placeholder='Kindly put your objectives in writing....'\r\n                                  onChange={(e)=>{setGoalString(e.target.value)}}\r\n                                  value={goalString}>\r\n                        </textarea>\r\n                        <button onClick={addGoal}>Add Goal</button>\r\n                    </div>\r\n\r\n                    <button onClick={()=>setDisplayOverlay()} className='close-button'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" class=\"w-6 h-6\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                        </svg>\r\n                    </button>\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default SetGoals"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,QAAQ,QAAO,OAAO;AAC9C,OAAO,gBAAgB;AACvB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,UAAU,QAAO,uBAAuB;AAAA;AAGhD,SAASC,QAAQ,OAAsB;EAAA;EAAA,IAArB;IAACC;EAAiB,CAAC;EAEjC,MAAM;IAACC,gBAAgB;IAACC,SAAS;IAACC;EAAQ,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;EACnF,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvBD,IAAI,CAACE,QAAQ,CAACN,SAAS,CAAC;EACxB,MAAMO,UAAU,GAAGH,IAAI,CAACI,cAAc,CAAC,OAAO,EAAE;IAAEC,KAAK,EAAE;EAAQ,CAAC,CAAC;EAGnE,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE/C,MAAMkB,OAAO,GAAG,MAAI,CAIpB,CAAC;EAED,oBACI,QAAC,QAAQ;IAAA,wBACL;MAAK,SAAS,EAAC,iBAAiB;MAAC,OAAO,EAAE,MAAId,iBAAiB;IAAG;MAAA;MAAA;MAAA;IAAA,QAAO,eACzE;MAAK,SAAS,EAAC,UAAU;MAAA,wBAEjB;QAAK,SAAS,EAAC,aAAa;QAAA,wBACxB;UAAA,UAAI;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK,eACtB;UAAA,UAAK,GAAEC,gBAAiB,IAAGQ,UAAW,IAAGN,QAAS;QAAC;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACtD,eAEN;QAAA;QAAA;QAAA;MAAA,QAAS,eAET;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC1B;UAAU,WAAW,EAAC,2CAA2C;UACvD,QAAQ,EAAGY,CAAC,IAAG;YAACF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;UAAA,CAAE;UAC/C,KAAK,EAAEL;QAAW;UAAA;UAAA;UAAA;QAAA,QACjB,eACX;UAAQ,OAAO,EAAEE,OAAQ;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACzC,eAEN;QAAQ,OAAO,EAAE,MAAId,iBAAiB,EAAG;QAAC,SAAS,EAAC,cAAc;QAAA,uBAC9D;UAAK,KAAK,EAAC,4BAA4B;UAAC,IAAI,EAAC,MAAM;UAAC,OAAO,EAAC,WAAW;UAAC,gBAAa,GAAG;UAAC,MAAM,EAAC,cAAc;UAAC,KAAK,EAAC,SAAS;UAAA,uBAC9H;YAAM,kBAAe,OAAO;YAAC,mBAAgB,OAAO;YAAC,CAAC,EAAC;UAAsB;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MAC1E;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACX;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAGnB;AAAC,GA7CQD,QAAQ;EAAA,QAEiCF,WAAW;AAAA;AAAA,KAFpDE,QAAQ;AA+CjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}