{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as api from '../Api/Api';\nexport const addUser = createAsyncThunk('user/addUser', async userData => {\n  return await api.addUser(userData);\n});\nexport const verifyUser = createAsyncThunk('user/verifyUser', async userData => {\n  try {\n    const response = await api.verifyUser(userData);\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw error.response.status;\n    } else {\n      throw \"500\";\n    }\n  }\n});\nexport const setGoal = createAsyncThunk('user/setGoal', async data => {\n  const response = await api.setGoal(data);\n  return response.data;\n});\nconst initialState = {\n  userData: {},\n  userLoggedIn: false,\n  firstTimeLogin: false,\n  addUserStatus: \"\",\n  addUserStatusMessage: \"\",\n  verifyUserStatus: \"\",\n  getUserInfoStatus: \"\",\n  updateCartStatus: \"\"\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: initialState,\n  reducers: {\n    setFirstTimeLogin(state) {\n      state.firstTimeLogin = false;\n    },\n    setUpdateCartStatus(state) {\n      state.updateCartStatus = \"\";\n    },\n    logoutUser(state) {\n      state.userLoggedIn = false;\n    }\n  },\n  extraReducers: {\n    [addUser.pending]: state => {\n      return {\n        ...state,\n        addUserStatus: \"pending\"\n      };\n    },\n    [addUser.rejected]: (state, payload) => {\n      return {\n        ...state,\n        addUserStatus: \"rejected\",\n        addUserStatusMessage: payload.error.message\n      };\n    },\n    [addUser.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      return {\n        ...state,\n        addUserStatus: \"success\",\n        userLoggedIn: true,\n        userData: payload.data.result\n      };\n    },\n    //////////////////////////////////////////////////////////////////////////////\n\n    [verifyUser.pending]: state => {\n      return {\n        ...state,\n        verifyUserStatus: \"pending\"\n      };\n    },\n    [verifyUser.rejected]: (state, payload) => {\n      return {\n        ...state,\n        verifyUserStatus: payload.error.message\n      };\n    },\n    [verifyUser.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return {\n        ...state,\n        verifyUserStatus: \"success\",\n        userLoggedIn: true,\n        displayOverlay: false,\n        firstTimeLogin: true,\n        userData: payload.result\n      };\n    },\n    //////////////////////////////////////////////////////////////////////////////\n\n    [setGoal.pending]: state => {\n      return {\n        ...state,\n        updateCartStatus: \"pending\"\n      };\n    },\n    [setGoal.rejected]: state => {\n      return {\n        ...state,\n        updateCartStatus: \"rejected\"\n      };\n    },\n    [setGoal.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return {\n        ...state,\n        updateCartStatus: \"success\",\n        userData: payload.result\n      };\n    }\n  }\n});\nexport default userSlice.reducer;\nexport const userActions = userSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","addUser","userData","verifyUser","response","data","error","status","setGoal","initialState","userLoggedIn","firstTimeLogin","addUserStatus","addUserStatusMessage","verifyUserStatus","getUserInfoStatus","updateCartStatus","userSlice","name","reducers","setFirstTimeLogin","state","setUpdateCartStatus","logoutUser","extraReducers","pending","rejected","payload","message","fulfilled","result","displayOverlay","reducer","userActions","actions"],"sources":["C:/Users/ritik/OneDrive/Desktop/React/my_timeline/client/src/Redux/userSlice.js"],"sourcesContent":["import {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\nimport * as api from '../Api/Api'\r\n\r\n\r\nexport const addUser = createAsyncThunk('user/addUser',async (userData) =>{\r\n    return await api.addUser(userData)\r\n})\r\n\r\n\r\nexport const verifyUser = createAsyncThunk('user/verifyUser', async (userData)=>{\r\n        try{\r\n            const response = await api.verifyUser(userData)\r\n            return response.data\r\n        }\r\n        catch(error){\r\n\r\n            if(error.response){\r\n                throw error.response.status\r\n            }\r\n            else{\r\n                throw \"500\"\r\n            }   \r\n        }\r\n})\r\n\r\n\r\nexport const setGoal = createAsyncThunk('user/setGoal',async (data) => {\r\n    const response = await api.setGoal(data)\r\n    return response.data\r\n})\r\n\r\n\r\n\r\nconst initialState = {\r\n    userData : {},\r\n    userLoggedIn: false,\r\n    firstTimeLogin : false,\r\n    \r\n    addUserStatus : \"\",\r\n    addUserStatusMessage:\"\",\r\n\r\n    verifyUserStatus: \"\",\r\n    getUserInfoStatus: \"\",\r\n    updateCartStatus : \"\",\r\n}\r\n\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState : initialState,\r\n    reducers: {\r\n        \r\n\r\n        setFirstTimeLogin(state){\r\n            state.firstTimeLogin = false\r\n        },\r\n        setUpdateCartStatus(state){\r\n            state.updateCartStatus  = \"\"\r\n        },\r\n\r\n        logoutUser(state){\r\n            state.userLoggedIn = false\r\n        },\r\n\r\n    },\r\n    extraReducers:{\r\n\r\n        [addUser.pending] : (state) => { return {...state, addUserStatus : \"pending\"}},  \r\n        [addUser.rejected] : (state,payload) => {\r\n                            return {...state,addUserStatus:\"rejected\", \r\n                                    addUserStatusMessage:payload.error.message\r\n                                }},\r\n        [addUser.fulfilled] : (state,{payload}) => {\r\n                            return {...state,\r\n                                addUserStatus : \"success\",\r\n                                userLoggedIn : true, \r\n                                userData : payload.data.result\r\n                            }},  \r\n\r\n        //////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        [verifyUser.pending] : (state) => { return {...state, verifyUserStatus : \"pending\"}},\r\n        [verifyUser.rejected] : (state,payload) => { return {...state,verifyUserStatus : payload.error.message}},\r\n        [verifyUser.fulfilled] : (state,{payload}) => { \r\n                            return {...state,\r\n                                verifyUserStatus : \"success\",\r\n                                userLoggedIn : true, \r\n                                displayOverlay: false,\r\n                                firstTimeLogin: true,\r\n                                userData : payload.result,\r\n                            }},\r\n        \r\n        \r\n        //////////////////////////////////////////////////////////////////////////////\r\n        \r\n        \r\n        \r\n        [setGoal.pending]:(state)=>{ return {...state,updateCartStatus:\"pending\"}},\r\n        [setGoal.rejected] : (state) => { return {...state,updateCartStatus:\"rejected\"}},\r\n        [setGoal.fulfilled] : (state,{payload}) => {return {...state,updateCartStatus:\"success\",userData:payload.result}},\r\n        \r\n\r\n    }\r\n})\r\n\r\n\r\nexport default userSlice.reducer \r\nexport const userActions = userSlice.actions"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}